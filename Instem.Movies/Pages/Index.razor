@page "/"
@using Instem.Movies.Data
@using Instem.Movies.Shared.Model

@inject IMovieDataService MovieData

<h1>Instem Movies App</h1>

Search or click!  Enjoy.

@if (!_movies.Any())
{
    <p><em>Loading...</em></p>
}
else
{
    <Addons>
        <Addon AddonType="AddonType.Body">
            <TextEdit @bind-Text="Criteria" Placeholder="Search for a movie..." />
        </Addon>
        <Addon AddonType="AddonType.End">
            <Button Clicked="@SearchButtonClicked">Search</Button>
        </Addon>
    </Addons>
    <br />
    <br />
    @foreach (var item in _movies)
    {
        <Card>
            <CardImage Source="@item.Info.ImageUrl" Alt="MovieImage"/>
            <CardBody>
                <CardTitle Size="5">@item.Title</CardTitle>
                <CardSubtitle>Released : @item.Year
                @{
                    if (item.Info.Directors.Any())
                    {
                        var dirs = string.Join(", ", item.Info.Directors);
                        <span>, Director(s) : @dirs</span>
                    }
                    if (item.Info.Actors.Any())
                    {
                        var acts = string.Join(", ", item.Info.Actors);
                        <span>, Starring : @acts</span>
                    }
                }
                </CardSubtitle>

            </CardBody>

        </Card>
    }
}



@code {
    readonly List<Movie> _movies = new List<Movie>();

    public string Criteria {get;set;}

    protected override async Task OnInitializedAsync()
    {
        var m = await MovieData.GetHomePageAsync();
        _movies.AddRange(m);
    }

    private async void SearchButtonClicked()
    {
        var m = await MovieData.GetSearchResultsAsync(Criteria);
        _movies.Clear();
        _movies.AddRange(m);
        this.StateHasChanged();
    }
}
