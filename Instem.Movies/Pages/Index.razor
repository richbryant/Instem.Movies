@page "/"
@using Instem.Movies.Data
@using Instem.Movies.Shared.Model

@inject IMovieDataService MovieData

<h1>Instem Movies App</h1>

Search or click!  Enjoy.

@if (!_movies.Any())
{
    <p><em>Loading...</em></p>
}
else
{
    <Addons>
        <Addon AddonType="AddonType.Body">
            <TextEdit @bind-Text="Criteria" Placeholder="Search for a movie..." />
        </Addon>
        <Addon AddonType="AddonType.End">
            <Button Clicked="@SearchButtonClicked">Search</Button>
        </Addon>
    </Addons>
    <br />
    <br />
    <Row>
        @foreach (var item in _movies)
        {
        <Column ColumnSize="ColumnSize.Is4.OnDesktop.IsThird.OnTablet.IsFull.OnMobile">
            <Card>
                <CardImage Source="@item.Info.ImageUrl" Alt="MovieImage" />
                <CardBody>
                    <CardTitle Size="5">@item.Title</CardTitle>
                    <CardSubtitle>
                        Released : @item.Year
                        @{
                            if (item.Info.Directors.Any())
                            {
                                var dirs = string.Join(", ", item.Info.Directors);
                                <span>, Director(s) : @dirs</span>
                            }
                            if (item.Info.Actors.Any())
                            {
                                var acts = string.Join(", ", item.Info.Actors);
                                <span>, Starring : @acts</span>
                            }
                            <span>, Rating: @item.Info.Rating</span>
                            <span>, Year: @item.Year</span>
                        }
                    </CardSubtitle>
                    <CardText>
                        <div><strong>Plot : </strong>@item.Info.Plot</div>
                        @{
                            if (item.Info.Genres.Any())
                            {
                                var genres = string.Join(", ", item.Info.Genres);
                                <div><strong>Genres : </strong>@genres</div>
                            }
                            <div><strong>Rank : @item.Info.Rank</strong></div>
                            <div><strong>Release Date: @item.Info.ReleaseDate.ToLongDateString()</strong></div>
                        }

                    </CardText>
                </CardBody>

            </Card>
        </Column>
        }
    </Row>
}



@code {
    readonly List<Movie> _movies = new List<Movie>();

    public string Criteria {get;set;}

    protected override async Task OnInitializedAsync()
    {
        var m = await MovieData.GetHomePageAsync();
        _movies.AddRange(m);
    }

    private async void SearchButtonClicked()
    {
        var m = await MovieData.GetSearchResultsAsync(Criteria);
        _movies.Clear();
        _movies.AddRange(m);
        this.StateHasChanged();
    }
}
